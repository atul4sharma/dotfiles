
" An example for a vimrc file.
"
" Maintainer:   Bram Moolenaar <Bram@vim.org>
" Last change:  2016 Mar 25
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"         for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"       for OpenVMS:  sys$login:.vimrc

" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

"" if has("vms")
""   set nobackup       " do not keep a backup file, use versions instead
"" else
""   set backup     " keep a backup file (restore to previous version)
""   set undofile       " keep an undo file (undo changes after closing)
"" endif

set history=50      " keep 50 lines of command line history
set ruler       " show the cursor position all the time
set showcmd     " display incomplete commands
set incsearch       " do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
"" if has('mouse')
""   set mouse=a
"" endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") >= 1 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

  augroup END

else

  set autoindent        " always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
          \ | wincmd p | diffthis
endif

if has('langmap') && exists('+langnoremap')
  " Prevent that the langmap option applies to characters that result from a
  " mapping.  If unset (default), this may break plugins (but it's backward
  " compatible).
  set langnoremap
endif


" Add optional packages.
"
" The matchit plugin makes the % command work better, but it is not backwards
" compatible.
packadd matchit


" My edits

set expandtab
set shiftwidth=4
set softtabstop=4
set tabstop=4
set number
set relativenumber
set wildmenu
set showmatch
set is

set ic
 
func! WordProcessorMode()
    setlocal textwidth=80
    setlocal smartindent
    setlocal spell spelllang=en_us
endfu

com! WP call WordProcessorMode()


set cursorline
hi CursorLine cterm=none ctermbg=235 ctermfg=none

set cursorcolumn
hi CursorColumn cterm=none ctermbg=235 ctermfg=none

set laststatus=2
" hi StatusLine cterm=none ctermbg=236 ctermfg=cyan


if &diff
    hi DiffAdd    cterm=none ctermbg=blue ctermfg=white
    hi DiffDelete cterm=none ctermbg=blue ctermfg=white
    hi DiffChange cterm=none ctermbg=blue ctermfg=white
    hi DiffText   cterm=none ctermbg=red  ctermfg=black
endif

nnoremap <F2> :setlocal number! <bar> setlocal relativenumber!<CR>
nnoremap <F9> gT
nnoremap <F10> gt

hi LineNr cterm=none ctermbg=none ctermfg=cyan

command! Rts :%s/\s\+$//

set matchpairs+=<:>

" This is for vim-gitgutter
set updatetime=100

" install fzf on system first and add config directory as runtime path
set rtp+=/usr/share/fzf

" this needs vim-plug to be installed
" https://github.com/junegunn/vim-plug
" call :PlugInstall to install all the mentioned plugins
call plug#begin()

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

call plug#end()

" FZF plugin settings
" Always enable preview window on the right with 40% width
let g:fzf_layout={'down':'~40%'}
" let g:fzf_colors={'border':  ['fg', 'Conditional', 'Bright']}

" This is to enable vim copying and pasting to sync with clipboard
" Disabling for now, since my mind is setup to process clipboard and vim
" separately
" set clipboard=unnamed


